# ---------------------------------------------------------------------------
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ---------------------------------------------------------------------------

name: builder

on:
  pull_request:
    branches:
      - main
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - 'proposals/**'
      - '**.adoc'
      - '**.md'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'
  push:
    branches:
      - main
      - "release-*"
    paths-ignore:
      - 'docs/**'
      - 'proposals/**'
      - '**.adoc'
      - '**.md'
      - 'KEYS'
      - 'LICENSE'
      - 'NOTICE'

concurrency:
  group: ${{ github.head_ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  builder-it:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        publisher: ["Buildah", "Spectrum", "Kaniko"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - id: prepare-env
      name: Prepare Test Environment
      uses: ./.github/actions/kamel-prepare-env

    - id: configure-platform
      name: Configure Platform
      uses: ./.github/actions/kamel-config-cluster
      with:
        cluster-type: ${{ steps.prepare-env.outputs.cluster-platform }}
        kube-config-data: ${{ secrets.KUBE_CONFIG_DATA }}
        kube-admin-user-ctx: ${{ secrets.KUBE_ADMIN_USER_CTX }}
        kube-user-ctx: ${{ secrets.KUBE_USER_CTX }}
        image-registry: ${{ secrets.IMAGE_REGISTRY }}
        image-registry-insecure: ${{ secrets.IMAGE_REGISTRY_INSECURE }}

      ## TODO
      # Create action to delegate to different actions depending on platform type
      # Configure following actions: kind, minishift, custom
      # Custom simply reads environment vars from .env
      # -- cluster reference
      # -- downloads and uses kubectl to configure the current context as the cluster
      # -- Need to get hold of an RH cluster to post in .env (private repository)
      #      or 1st step add in the minishift config action then extract the cluster location
      # Seems I can create my own private repository so worth trying with that.
      #

    - id: build-kamel-binary
      name: Build Kamel Binary
      uses: ./.github/actions/kamel-build
      with:
        image-registry: ${{ steps.configure-platform.outputs.image-registry }}

    - name: Install Kamel Cluster Setup
      uses: ./.github/actions/kamel-install-cluster-setup
      with:
        kube-admin-user-ctx: ${{ steps.configure-platform.outputs.kube-admin-user-ctx }}

    - name: Run IT
      env:
        KAMEL_INSTALL_BUILD_PUBLISH_STRATEGY: ${{ matrix.publisher }}
      run: |
        # Cluster environment
        export KAMEL_INSTALL_REGISTRY=${{ steps.configure-platform.outputs.image-registry }}
        export KAMEL_INSTALL_REGISTRY_INSECURE=${{ steps.configure-platform.outputs.image-registry-insecure }}
        export CUSTOM_IMAGE=${{ steps.build-kamel-binary.outputs.local-image-name }}
        export CUSTOM_VERSION=${{ steps.build-kamel-binary.outputs.local-image-version }}
        export KAMEL_INSTALL_OPERATOR_IMAGE=${CUSTOM_IMAGE}:${CUSTOM_VERSION}
        export CAMEL_K_TEST_IMAGE_NAME=${CUSTOM_IMAGE}
        export CAMEL_K_TEST_IMAGE_VERSION=${CUSTOM_VERSION}

        # Test options
        export KAMEL_INSTALL_MAVEN_REPOSITORIES=$(make get-staging-repo)
        export KAMEL_INSTALL_OPERATOR_ENV_VARS=KAMEL_INSTALL_DEFAULT_KAMELETS=false

        # Then run integration tests
        make test-builder
